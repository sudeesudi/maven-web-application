pipeline
{
agent any

tools{
maven "maven3.8.4"
}
triggers {
  pollSCM ('* * * * *')
}
options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
timestamps()
    
}


stages{

//checkout code stage
stage('CheckoutCode')
{
steps{
    sendSlackNotifications('STARTED')
git branch: 'development', credentialsId: 'e5262c9e-56f9-4358-8a54-61cb5b23a537', url: 'https://github.com/sudeesudi/maven-web-application.git'
}
}
//Buid stage
stage('Build')
{
steps{
sh "mvn clean package"
}
}
//execute sonaqube report
stage('ExecuteSonarQubeReport')
{
steps{
sh "mvn sonar:sonar"
}
}

//upload artifacts into artifactory repo
stage('UploadIntoNexus')
{
steps{
sh "mvn deploy"
}
}

stage('DeployAppintoTomcatServer')
{
steps{
sshagent(['3de98e2d-513c-4b3e-8596-a7772389f3ee']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.129:/opt/apache-tomcat-9.0.64/webapps"
}
}
}
}
post {
  success {
    sendSlackNotifications('SUCCESS')
  }
  failure {
    sendSlackNotifications('FAILURE')
  }
}

}

def sendSlackNotifications(String buildStatus = 'STARTED') 
{
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
	slackSend (color : colorCode, message: summary, channel: 'walmart')
}
